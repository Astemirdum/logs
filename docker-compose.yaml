version: '3.8'

services:
  log1:
    restart: unless-stopped
    container_name: log1
    build: ./
    ports:
      - "8881:8081"
    depends_on:
      - db
      - nginx
    environment:
      - LOG_LEVEL=debug
    networks:
      - log-network
    #    env_file:
    #      - .env
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 500M

  log2:
    restart: unless-stopped
    container_name: log2
    build: ./
    ports:
      - "8882:8081"
    depends_on:
      - db
      - nginx
    environment:
      - LOG_LEVEL=debug
    networks:
      - log-network
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 500M

  nginx:
    restart: unless-stopped
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8891:8891"
    networks:
      - log-network

  #master
  db:
    restart: unless-stopped
    image: postgres:latest
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      APP_DB_USER: post
      APP_DB_PASSWORD: ${DB_PASSWORD}
      APP_DB_NAME: logdb
    ports:
      - 5432:5432
    volumes:
      #- ./data:/var/lib/postgresql/data
      #- ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    #command: ["postgres", "-c", "config_file=/pgc/postgresql.conf", "-c","hba_file=/pgc/pg_hba.conf"]
    command: postgres -c wal_level=logical -c max_replication_slots=5 -c max_wal_senders=10
    networks:
      - log-network
  #slave1
  db1:
    restart: unless-stopped
    image: postgres:latest
    container_name: db1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      APP_DB_USER: post
      APP_DB_PASSWORD: ${DB_PASSWORD}
      APP_DB_NAME: logdb
    ports:
      - 5433:5432
    volumes:
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    command: postgres -c wal_level=logical -c max_replication_slots=5 -c max_wal_senders=10
    networks:
      - log-network
  #slave2
  db2:
    restart: unless-stopped
    image: postgres:latest
    container_name: db2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      APP_DB_USER: post
      APP_DB_PASSWORD: ${DB_PASSWORD}
      APP_DB_NAME: logdb
    ports:
      - 5434:5432
    volumes:
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    command: postgres -c wal_level=logical -c max_replication_slots=5 -c max_wal_senders=10
    networks:
      - log-network


networks:
  log-network:
    driver: bridge



